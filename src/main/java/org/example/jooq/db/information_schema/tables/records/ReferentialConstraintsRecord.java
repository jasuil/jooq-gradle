/**
 * This class is generated by jOOQ
 */
package org.example.jooq.db.information_schema.tables.records;


import javax.annotation.Generated;

import org.example.jooq.db.information_schema.tables.ReferentialConstraints;
import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferentialConstraintsRecord extends TableRecordImpl<ReferentialConstraintsRecord> implements Record9<String, String, String, String, String, String, String, String, String> {

	private static final long serialVersionUID = 732531765;

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG</code>.
	 */
	public void setConstraintCatalog(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG</code>.
	 */
	public String getConstraintCatalog() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA</code>.
	 */
	public void setConstraintSchema(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA</code>.
	 */
	public String getConstraintSchema() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME</code>.
	 */
	public void setConstraintName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME</code>.
	 */
	public String getConstraintName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG</code>.
	 */
	public void setUniqueConstraintCatalog(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG</code>.
	 */
	public String getUniqueConstraintCatalog() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA</code>.
	 */
	public void setUniqueConstraintSchema(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA</code>.
	 */
	public String getUniqueConstraintSchema() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME</code>.
	 */
	public void setUniqueConstraintName(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME</code>.
	 */
	public String getUniqueConstraintName() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.MATCH_OPTION</code>.
	 */
	public void setMatchOption(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.MATCH_OPTION</code>.
	 */
	public String getMatchOption() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UPDATE_RULE</code>.
	 */
	public void setUpdateRule(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UPDATE_RULE</code>.
	 */
	public String getUpdateRule() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.DELETE_RULE</code>.
	 */
	public void setDeleteRule(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.DELETE_RULE</code>.
	 */
	public String getDeleteRule() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, String, String, String, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, String, String, String, String, String, String, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.MATCH_OPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.UPDATE_RULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return ReferentialConstraints.REFERENTIAL_CONSTRAINTS.DELETE_RULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getConstraintCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getConstraintSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getConstraintName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getUniqueConstraintCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getUniqueConstraintSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getUniqueConstraintName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getMatchOption();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getUpdateRule();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getDeleteRule();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value1(String value) {
		setConstraintCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value2(String value) {
		setConstraintSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value3(String value) {
		setConstraintName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value4(String value) {
		setUniqueConstraintCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value5(String value) {
		setUniqueConstraintSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value6(String value) {
		setUniqueConstraintName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value7(String value) {
		setMatchOption(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value8(String value) {
		setUpdateRule(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord value9(String value) {
		setDeleteRule(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReferentialConstraintsRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ReferentialConstraintsRecord
	 */
	public ReferentialConstraintsRecord() {
		super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);
	}

	/**
	 * Create a detached, initialised ReferentialConstraintsRecord
	 */
	public ReferentialConstraintsRecord(String constraintCatalog, String constraintSchema, String constraintName, String uniqueConstraintCatalog, String uniqueConstraintSchema, String uniqueConstraintName, String matchOption, String updateRule, String deleteRule) {
		super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);

		setValue(0, constraintCatalog);
		setValue(1, constraintSchema);
		setValue(2, constraintName);
		setValue(3, uniqueConstraintCatalog);
		setValue(4, uniqueConstraintSchema);
		setValue(5, uniqueConstraintName);
		setValue(6, matchOption);
		setValue(7, updateRule);
		setValue(8, deleteRule);
	}
}
