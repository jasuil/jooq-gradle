buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
	  	mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jooq:jooq-codegen:3.7.4")
		classpath("com.h2database:h2:1.4.177")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-jooq')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.squareup.retrofit2:retrofit:2.5.0')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	compile('org.jooq:jooq:3.7.4')
	runtime('com.h2database:h2')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	// https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
	compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.13'
	// https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-jackson
	compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.5.0'
// https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
	compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.13.1'


}

// Use your favourite XML builder to construct the code generation configuration file
// ----------------------------------------------------------------------------------
def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
.configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd') {
    jdbc() {
        driver('org.h2.Driver')
        url('jdbc:h2:tcp://localhost/~/jooq')
        user('jasuil')
        password('')
        
    }
    generator() {
        database() {
        }

        // Watch out for this caveat when using MarkupBuilder with "reserved names"
        // - https://github.com/jOOQ/jOOQ/issues/4797
        // - http://stackoverflow.com/a/11389034/521799
        // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
        generate([:]) {
            pojos true
            daos true
        }
        target() {
            packageName('org.example.jooq.db')
            directory('src/main/java')
        }
    }
}

// Run the code generator
// ----------------------
org.jooq.util.GenerationTool.generate(writer.toString())
